{"version":3,"sources":["components/Header.js","components/Todo/Emoji.js","components/Todo/PriorityIcon.js","components/Todo/PriorityList.js","components/Todo/TodoOptions.js","components/Todo/TodoInput.js","components/Todo/Task.js","components/Todo/TaskButtons.js","components/Todo/OtherPriority.js","components/Todo/Priority.js","components/Todo/TodoItem.js","components/Todo/TodoList.js","components/functons/zeroPadding.js","components/functons/getDateTime.js","components/Todo/Todo.js","components/Body.js","components/Footer.js","components/App.js","serviceWorker.js","index.js"],"names":["Header","className","Emoji","priority","high","middle","low","priorityObj","PriorityIcon","role","aria-label","this","props","Component","PriorityList","Object","keys","map","index","tabIndex","Number","key","Date","now","value","onMouseUp","handleChangePriority","onTouchEnd","onKeyUp","handleChangePriorityWithKeyBoard","type","TodoOptions","TodoInput","handleClick","addTodo","state","setState","defaultState","handleEnter","e","shiftKey","handleChange","task","target","currentTarget","onKeyPress","id","onChange","onClick","Task","handleCheck","doneTodo","handleChangeTask","changeTask","status","true","false","checked","data-status","data-editing","editing","TaskButtons","handleUpdated","updatedTask","handleDidNotUpdate","didNotUpdateTask","title","OtherPriority","handleToggle","changePriority","list","filter","show","Priority","TodoItem","handleRemove","removeTodo","dateTime","time","TodoList","tasks","todo","editingTodo","zeroPadding","num","len","String","padStart","getDateTime","d","year","getFullYear","month","getMonth","date","getDate","hour","getHours","minutes","getMinutes","seconds","getSeconds","Todo","before","uniquId","saveState","window","localStorage","setItem","storage","JSON","stringify","handleSave","removeState","removeItem","trim","unshift","updated","changingPriority","savedState","parse","getItem","Body","Footer","href","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4eb62118.chunk.js","sourcesContent":["import React from 'react'\n\nconst Header = () => {\n  return (\n    <header className=\"app__header\">\n      <h1 className=\"app__header__heading\">ToDo List<br />今為すべきことを為せ</h1>\n    </header>\n  )\n}\n\nexport default Header","const Emoji = {\n  priority: {\n    high: '😍',\n    middle: '😀',\n    low: '😐'\n  },\n}\n\nconst priorityObj = Emoji.priority\n\nexport default Emoji\nexport { priorityObj }","import React, { Component } from 'react'\nimport { priorityObj } from './Emoji'\n\n// priority の絵文字とテキスト\nexport default class PriorityIcon extends Component {\n  render() {\n    return (\n      <div className=\"priority-icon\">\n        <span className=\"priority-icon__emoji\" role=\"img\" aria-label={`Priority: ${this.props.priority}`}>{priorityObj[this.props.priority]}</span><br />\n        <span className=\"priority-icon__text\">{this.props.priority}</span>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react'\nimport PriorityIcon from './PriorityIcon'\nimport { priorityObj } from './Emoji'\n\n// priority のリスト\nexport default class PriorityList extends Component {\n  render() {\n\n    const list = Object.keys(priorityObj).map((priority, index) => {\n      const tabIndex = Number(this.props.tabIndex) + index\n\n      const props = {\n        key: Date.now(),\n        value: priority,\n        tabIndex: tabIndex,\n        className: `priority-list__item__button${priority === this.props.priority ? ' priority-list__item__button--selected' : ''}`,\n        onMouseUp: this.props.handleChangePriority,\n        onTouchEnd: this.props.handleChangePriority,\n        onKeyUp: this.props.handleChangePriorityWithKeyBoard\n      }\n\n      return (\n        <li key={priority} className=\"priority-list__item\" >\n          <button {...props} type=\"button\">\n            <PriorityIcon priority={priority} />\n          </button>\n        </li >\n      )\n    })\n\n    return list\n  }\n}","import React, { Component } from 'react'\nimport PriorityList from './PriorityList'\n\n// Todo のオプション\nexport default class TodoOptions extends Component {\n  render() {\n    return (\n      <div className=\"options\">\n        <dl className=\"options__list\">\n          <div className=\"options__list__item\">\n            <dt className=\"options__list__item__heading\">Priority</dt>\n            <dd className=\"options__list__item__content\">\n              <ul className=\"priority-list\">\n                <PriorityList handleChangePriority={this.props.handleChangePriority} handleChangePriorityWithKeyBoard={this.props.handleChangePriorityWithKeyBoard} priority={this.props.priority} tabIndex=\"2\" />\n              </ul>\n            </dd>\n          </div>\n        </dl>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react'\nimport TodoOptions from './TodoOptions'\n\n// Todo の入力欄\nexport default class TodoInput extends Component {\n  constructor(props) {\n    super(props)\n\n    this.defaultState = {\n      task: '',\n      priority: 'middle'\n    }\n\n    this.state = this.defaultState\n  }\n\n  handleClick = () => {\n    // Todo を追加\n    this.props.addTodo(this.state)\n    // input を空にし、priority を middle にする\n    this.setState(this.defaultState)\n  }\n\n  handleEnter = e => {\n    if (e.shiftKey && e.key === 'Enter') {\n      this.props.addTodo(this.state)\n      this.setState(this.defaultState)\n    }\n  }\n\n  handleChange = e => {\n    this.setState({\n      task: e.target.value\n    })\n  }\n\n  handleChangePriority = e => {\n    this.setState({\n      // priority の変更する\n      priority: e.currentTarget.value\n    })\n  }\n\n  handleChangePriorityWithKeyBoard = e => {\n    // キーボードで priority を変更する\n    if (e.shiftKey === false && e.key === 'Enter') {\n      this.setState({\n        priority: e.currentTarget.value\n      })\n    }\n  }\n\n  render() {\n    return (\n      <div onKeyPress={this.handleEnter}>\n        <div className=\"input-todo\">\n          <input id=\"input\" className=\"input-todo__input\" tabIndex=\"1\" value={this.state.task} onChange={this.handleChange} type=\"text\" />\n          <button className=\"input-todo__add-button\" tabIndex=\"5\" onClick={this.handleClick} type=\"button\">Add</button>\n        </div>\n\n        <TodoOptions handleChangePriority={this.handleChangePriority} handleChangePriorityWithKeyBoard={this.handleChangePriorityWithKeyBoard} priority={this.state.priority} />\n      </div>\n    )\n  }\n}","import React, { Component } from 'react'\nimport TextareaAutosize from 'react-textarea-autosize';\n\n// 設定済みの task \nexport default class Task extends Component {\n  handleCheck = () => {\n    this.props.doneTodo(this.props.id)\n  }\n\n  handleChangeTask = e => {\n    this.props.changeTask(this.props.id, e.target.value)\n  }\n\n  render() {\n    const checked = {\n      true: 'checked',\n      false: ''\n    }\n\n    const status = {\n      true: 'done',\n      false: 'not-yet'\n    }\n\n    return (\n      <div className='task'>\n        <input className=\"task__check\" type=\"checkbox\" onChange={this.handleCheck} checked={checked[this.props.status]} />\n        <TextareaAutosize className=\"task__textarea\" data-status={status[this.props.status]} data-editing={this.props.editing} onChange={this.handleChangeTask} value={this.props.task} />\n        <pre className=\"task__text\" data-status={status[this.props.status]}>{this.props.task}</pre>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react'\n\n// task を編集したときの、save / cencel ボタン\nexport default class TaskButtons extends Component {\n  // タスクを更新した\n  handleUpdated = () => {\n    this.props.updatedTask(this.props.id)\n  }\n\n  // タスクを編集したが、キャンセルした\n  handleDidNotUpdate = () => {\n    this.props.didNotUpdateTask(this.props.id)\n  }\n\n  render() {\n    return (\n      <div className=\"task-buttons\" data-editing={this.props.editing}>\n        <button className=\"task-buttons__button task-buttons__button__save\" onClick={this.handleUpdated} title=\"Save\" type=\"button\">\n          <span role=\"img\" aria-label=\"save\">🙆‍♂️</span> save\n        </button>\n\n        <button className=\"task-buttons__button task-buttons__button__cancel\" onClick={this.handleDidNotUpdate} title=\"Cancel\" type=\"button\">‍\n          <span role=\"img\" aria-label=\"cancel\">🙅‍♂️</span> cancel\n        </button>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { priorityObj } from './Emoji'\nimport PriorityIcon from './PriorityIcon'\n\n// Todo に設定済みの priority 以外の priority のリスト\nexport default class OtherPriority extends Component {\n  // 設定済みの priority をクリックして、その他の priority の表示/非表示を切り替える\n  // プライオリティを変更する\n  handleClick = e => {\n    this.props.handleToggle()\n    this.props.changePriority(this.props.id, e.currentTarget.value)\n  }\n\n  render() {\n    // 投稿済みの Priority 以外の配列\n    const other = Object.keys(priorityObj).filter(priority => priority !== this.props.priority)\n\n    const list = other.map((key, index) => {\n\n      return (\n        <li className=\"other-priority__item\" key={key}>\n          <button key={index} className=\"other-priority__button\" value={key} onClick={this.handleClick} type=\"button\">\n            <PriorityIcon priority={key} />\n          </button>\n        </li >\n      )\n    })\n\n    return this.props.show === true ?\n      <ul className=\"other-priority other-priority--show\">{list}</ul> :\n      <ul className=\"other-priority\">{list}</ul>\n  }\n}","import React, { Component } from 'react'\nimport PriorityIcon from './PriorityIcon'\nimport OtherPriority from './OtherPriority'\n\n// Todo に設定済みの priority\nexport default class Priority extends Component {\n  render() {\n    return (\n      <div className=\"priority\">\n        <button className=\"priority__button\" onClick={this.props.handleToggle} type=\"button\">\n          <PriorityIcon priority={this.props.priority} />\n        </button>\n\n        <OtherPriority priority={this.props.priority} id={this.props.id} changePriority={this.props.changePriority} show={this.props.show} handleToggle={this.props.handleToggle} />\n      </div >\n    )\n  }\n}","import React, { Component } from 'react'\nimport Task from './Task'\nimport TaskButtons from './TaskButtons'\nimport Priority from './Priority'\n\n// Todo の項目\nexport default class TodoItem extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      show: false\n    }\n  }\n\n  handleRemove = () => {\n    this.props.removeTodo(this.props.id)\n  }\n\n  handleToggle = () => {\n    this.setState({\n      show: !this.state.show\n    })\n  }\n\n  render() {\n    return (\n      <li className=\"todo-list__item\">\n        <Task {...this.props} />\n        <TaskButtons {...this.props} />\n        <Priority {...this.props} show={this.state.show} handleToggle={this.handleToggle} />\n\n        <time className=\"todo-list__item__time\" dateTime={this.props.time}>{this.props.time}</time>\n        <button className=\"todo-list__item__remove\" onClick={this.handleRemove} title=\"このTodoを削除する\">🗑</button>\n      </li >\n    )\n  }\n}","import React, { Component } from 'react'\nimport TodoItem from './TodoItem'\n\n// Todo のリスト\nexport default class TodoList extends Component {\n  render() {\n\n    const list = this.props.tasks.map(todo => {\n\n      const props = {\n        key: todo.id,\n        removeTodo: this.props.removeTodo,\n        doneTodo: this.props.doneTodo,\n        editingTodo: this.props.editingTodo,\n        updatedTask: this.props.updatedTask,\n        didNotUpdateTask: this.props.didNotUpdateTask,\n        changeTask: this.props.changeTask,\n        changePriority: this.props.changePriority,\n      }\n\n      return <TodoItem {...todo} {...props} />\n    })\n\n    return <ul className=\"todo-list\">{list}</ul>\n  }\n}","const zeroPadding = (num, len) => {\n  return String(num).padStart(len, '0')\n}\n\nexport default zeroPadding\n","import zeroPadding from './zeroPadding'\n\nconst getDateTime = () => {\n  const d = new Date()\n  const year = d.getFullYear()\n  const month = zeroPadding(d.getMonth() + 1, 2)\n  const date = zeroPadding(d.getDate(), 2)\n  const hour = zeroPadding(d.getHours(), 2)\n  const minutes = zeroPadding(d.getMinutes(), 2)\n  const seconds = zeroPadding(d.getSeconds(), 2)\n\n  return `${year}-${month}-${date} ${hour}:${minutes}:${seconds}`\n}\n\nexport default getDateTime","import React, { Component } from 'react'\nimport TodoInput from './TodoInput'\nimport TodoList from './TodoList'\nimport getDateTime from '../functons/getDateTime'\n\nexport default class Todo extends Component {\n  constructor(props) {\n    super(props)\n\n    this.storage = 'app-state'\n    const savedState = JSON.parse(localStorage.getItem(this.storage))\n\n    // すでに保存されたデータがある場合は、それを使う\n    // ない場合は、defaultState を呼ぶ\n    this.state = savedState ? savedState : this.defaultState()\n  }\n\n  // デフォルトの state を返す\n  defaultState = () => {\n    const defaultTask = 'Add your tasks or edit this!'\n\n    return {\n      tasks: [{\n        task: defaultTask,\n        before: defaultTask,\n        status: false, // true => Done, false => NotYet\n        editing: false, // true => タスクを編集中\n        time: getDateTime(),\n        priority: 'middle',\n        id: 0\n      }],\n      uniquId: 1\n    }\n  }\n\n  // state を localStorage に保存する\n  saveState = state => {\n    window.localStorage.setItem(this.storage, JSON.stringify(state))\n  }\n\n  handleSave = () => {\n    this.saveState(this.state)\n  }\n\n  // localStorage に保存された state を削除する\n  // デフォルトの state に戻す\n  removeState = () => {\n    window.localStorage.removeItem(this.storage)\n    this.setState(this.defaultState())\n  }\n\n  // Todo を追加\n  addTodo = todo => {\n    todo.task = todo.task.trim()\n    if (todo.task === '') return\n\n    const { tasks, uniquId } = this.state\n\n    tasks.unshift({\n      task: todo.task,\n      before: todo.task,\n      status: false,\n      editing: false,\n      time: getDateTime(),\n      priority: todo.priority,\n      id: uniquId\n    })\n\n    this.setState({\n      tasks,\n      uniquId: uniquId + 1\n    }, this.handleSave)\n  }\n\n  // ゴミ箱アイコン🗑をクリックして、タスクを削除。\n  removeTodo = id => {\n    this.setState({\n      tasks: this.state.tasks.filter(task => task.id !== id)\n    }, this.handleSave)\n  }\n\n  // Todo を完了にする\n  doneTodo = id => {\n    this.setState(this.state.tasks.map(task => {\n      if (task.id === id) {\n        task.status = !task.status\n      }\n      return task\n    }), this.handleSave)\n  }\n\n  // タスクの編集を保存する\n  updatedTask = id => {\n    this.setState(this.state.tasks.map(task => {\n      if (task.id === id) {\n        task.editing = false\n        task.before = task.task\n      }\n\n      return task\n    }), this.handleSave)\n  }\n\n  // タスクの編集をキャンセルして、元のタスクを表示する\n  didNotUpdateTask = id => {\n    this.setState(this.state.tasks.map(task => {\n      if (task.id === id) {\n        task.editing = false\n        task.updated = !task.updated\n        task.task = task.before\n      }\n\n      return task\n    }), this.handleSave)\n  }\n\n  // タスクを編集する\n  changeTask = (id, value) => {\n    this.setState(this.state.tasks.map(task => {\n      if (task.id === id) {\n        task.editing = true\n        task.task = value\n      }\n\n      return task\n    }), this.handleSave)\n  }\n\n  // 投稿済みのタスクの Priority を変更する\n  changePriority = (id, priority) => {\n\n    this.setState(this.state.tasks.map(task => {\n      if (task.id === id) {\n        task.priority = priority\n        task.changingPriority = false\n      }\n\n      return task\n    }), this.handleSave)\n  }\n\n  render() {\n    const props = {\n      tasks: this.state.tasks,\n      removeTodo: this.removeTodo,\n      doneTodo: this.doneTodo,\n      editing: this.editingTodo,\n      changeTask: this.changeTask,\n      updatedTask: this.updatedTask,\n      didNotUpdateTask: this.didNotUpdateTask,\n      changePriority: this.changePriority,\n    }\n\n    return (\n      <div className=\"todo\">\n        <TodoInput addTodo={this.addTodo} />\n        <TodoList {...props} />\n        <p className=\"remove-data\">\n          This app uses localStorage to store ToDo data.<br />\n          <button className=\"remove-data__button\" onClick={() => this.removeState()}>Clear the data</button>\n        </p>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport Todo from './Todo/Todo'\n\nconst Body = () => {\n  return (\n    <div className=\"app__body\">\n      <Todo />\n    </div>\n  )\n}\n\nexport default Body ","import React from 'react'\n\nconst year = new Date().getFullYear()\n\nconst Footer = () => {\n  return (\n    <footer className=\"app__footer\">\n      <p className=\"align-center\">Github repository: <a href=\"https://github.com/shunk76/react-todo-list\">react-todo-list</a></p>\n      <p className=\"copy-right\">© <span>{year}</span> <a href=\"https://bonyspike.asia\">bonyspike.asia</a></p>\n    </footer>\n  )\n}\n\nexport default Footer","import React from 'react';\nimport Header from './Header'\nimport Body from './Body'\nimport Footer from './Footer'\nimport './App.scss';\n\nfunction App() {\n  return <>\n    <Header />\n    <Body />\n    <Footer />\n  </>\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './components/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\nserviceWorker.register();\n"],"sourceRoot":""}